name: Claude Code Review

on:
  pull_request:
    types: [opened, reopened]
  issue_comment:
    types: [created]
  workflow_dispatch:

concurrency:
  group: "claude-review-${{ github.event.pull_request.number || github.event.issue.number }}"
  cancel-in-progress: false

jobs:
  claude-review:
    if: |
      github.event_name == 'pull_request' ||
      (github.event_name == 'issue_comment' &&
       github.event.issue.pull_request &&
       contains(github.event.comment.body, '@claude'))

    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write
    env:
      AWS_REGION: us-west-2

    steps:
      - name: Generate GitHub App token
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha || github.event.pull_request.merge_commit_sha }}

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-west-2

      - name: Setup GitHub CLI and Git
        run: |
          # GitHub CLI is pre-installed on ubuntu-latest, but ensure it's configured
          gh --version
          git --version
          git config --global user.name "Claude Code"
          git config --global user.email "claude-code@anthropic.com"

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        env:
          CLAUDE_CODE_MAX_OUTPUT_TOKENS: 8192
        with:
          use_bedrock: "true"
          model: "us.anthropic.claude-sonnet-4-20250514-v1:0"
          github_token: ${{ steps.app-token.outputs.token }}

          # Optional: Specify different Bedrock model (uncomment for Claude Opus 4)
          # model: "us.anthropic.claude-opus-4-20250514-v1:0"

          # Direct prompt for automated review (no @claude mention needed)
          direct_prompt: |
            You are the autonomous maintainer of the claude-code-docs repository - a documentation and resources repository for Claude Code.

            **Your Authority**: You have full decision-making power to:
            - Review and merge PRs that improve the repository
            - Reject PRs that don't align with the repository's purpose
            - Request changes or additional information
            - Manage repository quality and consistency

            **Repository Purpose**: Educational Claude Code documentation and resources for developers learning to use Claude Code effectively.

            **Decision Framework**:
            1. **Auto-merge immediately** if changes are:
               - Documentation updates from automation (github-actions[bot])
               - Minor fixes, typos, or formatting improvements
               - New helpful examples or tutorials
               - Security updates or dependency bumps
               - Workflow improvements that enhance automation

            2. **Review and provide feedback** for:
               - Significant content changes or new features
               - Changes that might affect user experience
               - Structural modifications to the repository

            3. **Request human review** only for:
               - Suspicious or potentially malicious content
               - Major architectural changes
               - Legal or compliance concerns

            **Your Actions**: 
            - Comment with your decision rationale
            - Merge using `gh pr merge {PR_NUMBER} --squash` if appropriate
            - For significant updates, mention @lroolle in your comment to notify the maintainer

            **Notification Guidelines**:
            - Tag @lroolle for: major documentation restructures, new feature announcements, breaking changes, security updates, or workflow modifications
            - No need to tag for: routine doc updates, typo fixes, minor formatting changes

            Be decisive, helpful, and focused on maintaining a high-quality learning resource for Claude Code users.

          # Optional: Customize review based on file types
          # direct_prompt: |
          #   Review this PR focusing on:
          #   - For TypeScript files: Type safety and proper interface usage
          #   - For API endpoints: Security, input validation, and error handling
          #   - For React components: Performance, accessibility, and best practices
          #   - For tests: Coverage, edge cases, and test quality

          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' &&
          #   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
          #   'Please provide a thorough code review focusing on our coding standards and best practices.' }}

          # Allow Claude Code full repository management capabilities
          allowed_tools: "Bash(gh pr*),Bash(git*),Bash(gh issue*),Bash(gh release*),Bash(npm*),Bash(ls*),Bash(cat*),Bash(grep*)"

          # Optional: Skip review for certain conditions
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]')

