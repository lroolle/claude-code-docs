name: Claude Code Review

on:
  pull_request:
    types: [opened, reopened]
  issue_comment:
    types: [created]
  workflow_dispatch:

concurrency:
  group: "claude-review-${{ github.event.pull_request.number || github.event.issue.number }}"
  cancel-in-progress: false

jobs:
  claude-review:
    if: |
      github.event_name == 'pull_request' ||
      (github.event_name == 'issue_comment' &&
       github.event.issue.pull_request &&
       contains(github.event.comment.body, '@claude') &&
       (github.actor == 'lroolle' ||
        github.actor == github.repository_owner ||
        github.actor == 'github-actions[bot]' ||
        github.actor == 'claude-yolo[bot]' ||
        contains(fromJSON('["OWNER", "MEMBER", "COLLABORATOR"]'), github.event.comment.author_association)))

    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      actions: read
      checks: write
      statuses: write
      id-token: write
    env:
      AWS_REGION: us-west-2

    steps:
      - name: Generate GitHub App token
        id: app-token
        uses: actions/create-github-app-token@beta
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha || github.event.pull_request.merge_commit_sha }}

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-west-2

      - name: Setup GitHub CLI and Git
        run: |
          # GitHub CLI is pre-installed on ubuntu-latest, but ensure it's configured
          gh --version
          git --version
          git config --global user.name "claude-yolo[bot]"
          git config --global user.email "claude-yolo@lroole.com"

      - name: Run Claude Code Review
        id: claude-review
        if: |
          !contains(github.event.pull_request.title, '[skip-review]') &&
          !contains(github.event.pull_request.title, '[WIP]')
        uses: thevibeworks/claude-code-action@fix/allow-bot-users
        env:
          CLAUDE_CODE_MAX_OUTPUT_TOKENS: 8192
        with:
          use_bedrock: "true"
          model: "us.anthropic.claude-sonnet-4-20250514-v1:0"
          github_token: ${{ steps.app-token.outputs.token }}
          allow_bot_users: true

          # Optional: Specify different Bedrock model (uncomment for Claude Opus 4)
          # model: "us.anthropic.claude-opus-4-20250514-v1:0"

          # Allow Claude Code full repository management capabilities (matches .claude/settings.json)
          allowed_tools: "Bash(gh pr:*),Bash(git:*),Bash(gh issue:*),Bash(gh release:*),Bash(npm:*),Bash(ls:*),Bash(cat:*),Bash(grep:*),Bash(./fetchccdocs.sh:*)"

          # Direct prompt for automated review (no @claude mention needed)
          direct_prompt: |
            You're the witty guardian of claude-code-docs repo - where all the cool docs and resources live. You're like a bouncer but for code stuff!

            Your powers:
              - Merge PRs that spark joy
              - Kick out the sketchy ones
              - Ask questions when something smells fishy
              - Keep this place neat and tidy
              - This repo exists to: help devs learn Claude code without losing their minds

            Your decision flow:

              1. Auto-approve these babies:
                - Bot doc updates
                - Tiny fixes
                - Fresh tutorials
                - Security stuff
                - Workflow tweaks
              2. Put on your thinking cap for:
                - Big content changes
                - User experience stuff
                - Structural shenanigans
              3. Call for backup when you see:
                - Sus content
                - Massive changes
                - Legal stuff
            Your job:
              - Explain your calls
              - Merge with command when happy
              - Ping @lroolle for the big stuff

            When to bug @lroolle:
              - Doc overhauls
              - New features
              - Breaking changes
              - Security updates
              - Workflow changes

            Chill on the small stuff tho!
            Be smart, be sassy, keep it classy ðŸ˜Ž

            [sassy botðŸ¤–]

          # Optional: Customize review based on file types
          # direct_prompt: |
          #   Review this PR focusing on:
          #   - For TypeScript files: Type safety and proper interface usage
          #   - For API endpoints: Security, input validation, and error handling
          #   - For React components: Performance, accessibility, and best practices
          #   - For tests: Coverage, edge cases, and test quality

          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' &&
          #   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
          #   'Please provide a thorough code review focusing on our coding standards and best practices.' }}
